# This Add-in Tool requires the following workflow secrets (name.field):
#
# blackduck-credential.api-token

[blackduck]
baseUrl = ""                # the base URL endpoint for the Black Duck server
projectName = ""            # the name of the Black Duck project. If it does not already exist, it will be created
versionName = ""            # the name of the Black Duck project version.
skipCertCheck = false       # when true, you must use the Manage Certificates add-in feature to upload your server certificate.

[source-code]

relativeDirectory=''            # source code directory specified by relative directory name (overrides projectFileDirectoryPatterns)
projectFileDirectoryPatterns=[] # patterns (e.g., *.sln,*.csproj) to find source code directory by largest, first file found

[detect]
preDetectCmdLine      = ''       # optional command to run before invoking Synopsys Detect
options               = []       # CLI args passed to Synopsys Detect
optionsYaml           = ''       # YAML args passed to Synopsys Detect (--spring.config.location)
# skipSynopsysPhoneHome = true   # set to true to opt-out of sharing usage metrics

[scraper]
options = []                # CLI args passed to Black-Duck-Scrape.jar

[request] # (reserved for Code Dx use)

# The image name contains the Docker image that handles this scan request file.
#
imageName = "codedx/codedx-blackduckrunner:v1.26.0"

# The work directory stores k8s secrets, trusted CA certificates,a copy of the scan request
# file, and the exit code file. The user running the Docker image *must* have write access
# to the work directory.
#
# $workDirectory/analysis-exit-code  - exit code of the shell command
# $workDirectory/ca-certificates     - trusted CA certificates
# $workDirectory/config/request.toml - a copy of the scan request file
# $workDirectory/input               - analysis input
# $workDirectory/workflow-secrets    - workflow secrets
#
workDirectory = "/opt/codedx/blackduck/work"

# The shell cmd to run as the entry point for the tool.
#
shellCmd =  '''
	source=$(ls /opt/codedx/blackduck/work/input)
	pwsh /opt/codedx/blackduck/bin/BlackDuck.ps1 \
		"/opt/codedx/blackduck/work/input/$source" \
		/opt/codedx/blackduck/work/config/request.toml
'''

# The result file contains the tool output provided to Code Dx.
#
resultFilePath = "/opt/codedx/blackduck/work/output/blackduck.output.zip"
